import { uniqueId, NodeDefinition, RelationshipRule } from 'common';

export {
  provenanceNodes,
  studies,
  informationFields,
  informationRelationships,
  dependencyRelationships,
} from './assets/web-provenance-export.json';

// Definitions
const model: NodeDefinition = {
  id: 'Model',
  classification: 'entity',
  labelFormatString: "M${version}${study ? ' (' + study.source  + ')' : ''}",
}

const wetLabData: NodeDefinition = {
  id: 'WetLabData',
  classification: 'entity',
}

const simulationData: NodeDefinition = {
  id: 'SimulationData',
  classification: 'entity',
}

const modelBuildingActivity: NodeDefinition = {
  id: 'ModelBuildingActivity',
  label: 'MBA',
  classification: 'activity',
}

const modelExplorationActivity: NodeDefinition = {
  id: 'ModelExplorationActivity',
  label: 'MEA',
  classification: 'activity',
}

const theoreticalKnowledge: NodeDefinition = {
  id: 'TheoreticalKnowledge',
  label: 'MEA',
  classification: 'activity',
}

export const rules: RelationshipRule[] = [
  {
    id: uniqueId(),
    type: ['Used for calibration', 'Used for validation'],
    cardinality: 'one-to-many',
    source: modelBuildingActivity.id,
    target: wetLabData.id,
  },
  {
    id: uniqueId(),
    type: ['Used for calibration', 'Used for validation'],
    cardinality: 'one-to-many',
    source: modelBuildingActivity.id,
    target: simulationData.id,
  },
  {
    id: uniqueId(),
    type: ['Used'],
    cardinality: 'one-to-many',
    source: modelBuildingActivity.id,
    target: model.id,
  },
  {
    id: uniqueId(),
    type: ['Derived from'],
    cardinality: 'one-to-one',
    source: model.id,
    target: model.id,
  },
  {
    id: uniqueId(),
    type: ['Generated by'],
    cardinality: 'one-to-one',
    source: model.id,
    target: modelBuildingActivity.id,
  },
  {
    id: uniqueId(),
    type: ['Used'],
    cardinality: 'one-to-one',
    source: modelExplorationActivity.id,
    target: model.id,
  },
  {
    id: uniqueId(),
    type: ['Generated by'],
    cardinality: 'one-to-one',
    source: simulationData.id,
    target: modelBuildingActivity.id,
  },
  {
    id: uniqueId(),
    type: ['Generated by'],
    cardinality: 'one-to-one',
    source: simulationData.id,
    target: modelExplorationActivity.id,
  },
]

export const definitions: NodeDefinition[] = [
  model,
  wetLabData,
  simulationData,
  modelBuildingActivity,
  modelExplorationActivity,
  theoreticalKnowledge,
]