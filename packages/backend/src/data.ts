import { uniqueId, NodeDefinition, RelationshipRule } from 'common';

export {
  provenanceNodes,
  studies,
  informationFields,
  informationRelationships,
  dependencyRelationships,
} from './assets/web-provenance-export.json';

// Definitions
const researchQuestion: NodeDefinition = {
  id: 'Research Question',
  classification: 'entity',
  labelFormatString: "M${version}${study ? ' (' + study.source  + ')' : ''}",
}

const assumption: NodeDefinition = {
  id: 'Assumption',
  classification: 'entity',
  labelFormatString: "M${version}${study ? ' (' + study.source  + ')' : ''}",
}

const requirement: NodeDefinition = {
  id: 'Requirement',
  classification: 'entity',
  labelFormatString: "M${version}${study ? ' (' + study.source  + ')' : ''}",
}

const data: NodeDefinition = {
  id: 'Data',
  classification: 'entity',
  labelFormatString: "M${version}${study ? ' (' + study.source  + ')' : ''}",
}

const experiment: NodeDefinition = {
  id: 'Experiment',
  classification: 'entity',
  labelFormatString: "M${version}${study ? ' (' + study.source  + ')' : ''}",
}

const qualitativeModel: NodeDefinition = {
  id: 'Qualitative Model',
  classification: 'entity',
  labelFormatString: "M${version}${study ? ' (' + study.source  + ')' : ''}",
}

const simulationModel: NodeDefinition = {
  id: 'Simulation Model',
  classification: 'entity',
  labelFormatString: "M${version}${study ? ' (' + study.source  + ')' : ''}",
}

const modelBuildingActivity: NodeDefinition = {
  id: 'Model Building Activity',
  label: 'MBA',
  classification: 'activity',
}

const modelAnalysisActivity: NodeDefinition = {
  id: 'Model Analysis Activity',
  label: 'MAA',
  classification: 'activity',
}

export const rules: RelationshipRule[] = [
  {
    id: 'data-generated-by-model-building-activity',
    type: ['Generated by'],
    cardinality: 'one-to-one',
    source: data.id,
    target: modelBuildingActivity.id,
  },
  {
    id: 'data-generated-by-model-explanalysisoration-activity',
    type: ['Generated by'],
    cardinality: 'one-to-one',
    source: data.id,
    target: modelAnalysisActivity.id,
  },
  {
    id: 'experiment-generated-by-model-building-activity',
    type: ['Generated by'],
    cardinality: 'one-to-one',
    source: experiment.id,
    target: modelBuildingActivity.id,
  },
  {
    id: 'experiment-generated-by-model-analysis-activity',
    type: ['Generated by'],
    cardinality: 'one-to-one',
    source: experiment.id,
    target: modelAnalysisActivity.id,
  },
  {
    id: 'qualitative-model-generated-by-model-building-activity',
    type: ['Generated by'],
    cardinality: 'one-to-one',
    source: qualitativeModel.id,
    target: modelBuildingActivity.id,
  },
  {
    id: 'simulation-model-generated-by-model-building-activity',
    type: ['Generated by'],
    cardinality: 'one-to-one',
    source: simulationModel.id,
    target: modelBuildingActivity.id,
  },
  {
    id: 'model-building-activity-used-data-for-calibration-validation',
    type: ['Used for calibration', 'Used for validation'],
    cardinality: 'one-to-many',
    source: modelBuildingActivity.id,
    target: data.id,
  },
  {
    id: 'model-building-activity-used-research-question',
    type: ['Used'],
    cardinality: 'one-to-many',
    source: modelBuildingActivity.id,
    target: researchQuestion.id,
  },
  {
    id: 'model-building-activity-used-assumption',
    type: ['Used'],
    cardinality: 'one-to-many',
    source: modelBuildingActivity.id,
    target: assumption.id,
  },
  {
    id: 'model-building-activity-used-requirement',
    type: ['Used'],
    cardinality: 'one-to-many',
    source: modelBuildingActivity.id,
    target: requirement.id,
  },
  {
    id: 'model-building-activity-used-qualitative-model',
    type: ['Used'],
    cardinality: 'one-to-many',
    source: modelBuildingActivity.id,
    target: qualitativeModel.id,
  },
  {
    id: 'model-building-activity-used-simulation-model',
    type: ['Used'],
    cardinality: 'one-to-many',
    source: modelBuildingActivity.id,
    target: simulationModel.id,
  },
  {
    id: 'model-analysis-activity-used-data',
    type: ['Used'],
    cardinality: 'one-to-one',
    source: modelAnalysisActivity.id,
    target: data.id,
  },
  {
    id: 'model-analysis-activity-used-simulation-model',
    type: ['Used'],
    cardinality: 'one-to-one',
    source: modelAnalysisActivity.id,
    target: simulationModel.id,
  },
  {
    id: 'model-analysis-activity-used-qualitative-model',
    type: ['Used'],
    cardinality: 'one-to-one',
    source: modelAnalysisActivity.id,
    target: qualitativeModel.id,
  },
]

export const definitions: NodeDefinition[] = [
  researchQuestion,
  assumption,
  requirement,
  data,
  experiment,
  qualitativeModel,
  simulationModel,
  modelBuildingActivity,
  modelAnalysisActivity,
]